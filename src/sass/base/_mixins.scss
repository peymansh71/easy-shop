// some usefull mixins that you may OR may not need

// Linear gradinetngradient
@mixin linearGradient($from, $to, $stop: 100%) {
  /* fallback/image non-cover color */
  background-color: $from;
  background-image: -moz-linear-gradient(
    left,
    $from 0%,
    $to $stop
  ); /* Firefox 3.6+ */
  background-image: -webkit-gradient(
    linear,
    left top,
    right top,
    color-stop(0%, $from),
    color-stop($stop, $to)
  ); /* Safari 4+, Chrome 1+ */
  background-image: -webkit-linear-gradient(
    left,
    $from 0%,
    $to $stop
  ); /* Safari 5.1+, Chrome 10+ */
  background-image: -o-linear-gradient(
    left,
    $from 0%,
    $to $stop
  ); /* Opera 11.10+ */
  background: -ms-linear-gradient(left, $from 0%, $to $stop); /* IE10+ */
  background: linear-gradient(to right, $from 0%, $to $stop); /* Standard */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='$from', endColorstr='$to',GradientType=1 ); /* IE6-9 */
}

// Fit windows
@mixin fitWindow {
  width: 100%;
  height: 100vh;
}

// Make Center
@mixin makeCenter($align, $justify, $direction) {
  display: flex;
  align-items: $align;
  justify-content: $justify;
  flex-direction: $direction;
}

// unselectable
@mixin unselectable {
  user-select: none;
  -moz-user-select: none;
  -khtml-user-select: none;
  -webkit-user-select: none;
  -o-user-select: none;
}

// befoee after for gradient purposes mostly
@mixin beforeAfter() {
  content: "";
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
}

@mixin easeTransition($time) {
  transition: all $time ease-in-out;
}

@mixin stripField {
  border: 0px;
  outline: 0px;
  background-color: $white;
}

@mixin spin($duration) {
  animation-name: spin;
  animation-duration: $duration;
  animation-iteration-count: infinite;
  animation-timing-function: linear;

  @keyframes spin {
    from {
      transform: rotate(0deg);
    }
    to {
      transform: rotate(360deg);
    }
  }
}

// Responsive
@mixin MIN_QUERY($min) {
  @media screen and (min-width: $min) {
    @content;
  }
}

@mixin MAX_QUERY($max) {
  @media screen and (max-width: $max) {
    @content;
  }
}

@mixin MIN_MAX_QUERY($min, $max) {
  @media screen and (min-width: $min) and (max-width: $max) {
    @content;
  }
}

@mixin loader($background, $forground, $width, $height: 150%) {
  position: absolute;
  right: 0;
  top: 0;
  width: $width;
  height: $height;
  display: block;
  transform: scale(1.6) translateY(0px) rotateZ(10deg);
  animation: loading infinite 1.65s cubic-bezier(0.63, 0.62, 0.07, 0.96);
  // animation-delay: 0.295s;
  background: linear-gradient(
    to left,
    $background 0%,
    $forground 50%,
    $background 100%
  );

  @keyframes loading {
    0% {
      right: -100%;
      opacity: 0;
    }
    30%,
    60% {
      opacity: 1;
    }
    90%,
    100% {
      right: 100%;
      opacity: 0;
    }
  }
}

@mixin skeletonEffect {
  --skeleton-bg-color: #f0f0f0;
  overflow: hidden;
  position: relative;
  &::before {
    content: "";
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    transform: translateX(100%);
    background: linear-gradient(
      90deg,
      rgba(#ffffff, 0) 80%,
      rgba(#ffffff, 0) 50%,
      rgba(#ffffff, 0.6) 90%,
      rgba(#ffffff, 0) 95%,
      rgba(#ffffff, 0) 100%
    );
    filter: blur(20px);
    animation: loading 1.5s infinite;
    z-index: 100;
    @keyframes loading {
      100% {
        transform: translateX(-100%);
      }
    }
  }
}

@mixin skeletonLine {
  height: 6px;
  width: 100%;
  border-radius: 2px;
  background-color: #e2e2e2;
}

// placeholder
@mixin placeholder {
  ::-webkit-input-placeholder {
    @content;
  }
  :-moz-placeholder {
    @content;
  }
  ::-moz-placeholder {
    @content;
  }
  :-ms-input-placeholder {
    @content;
  }
}
